#!/bin/bash
#Zenity front-end to 'multiburn'
#Copyright David Stark 2007

#This program is free software; you can redistribute it and/or modify
#it under the terms of the GNU General Public License version 2 as published by
#the Free Software Foundation.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details:
#http://www.gnu.org/licenses/old-licenses/gpl-2.0.html

#Any questions or suggestions at all, email me at: dave@davidstark.name
function iszenityinstalled(){
# Is zenity installed?
which zenity >/dev/null
if [ $? -eq 1 ] ; then
echo "Zenity is not installed! Please install it as it is needed by this script."
exit
fi
}

function setradiobuttondefaultselections(){
  for button in dtdatacd dtaudiocd dtdvd dcddstdiscimage dcddstdiscdrive dcddstdatadirectory dcddstsingledatafile acddsttoccuefile acddstdiscdrive acddstaudiodirectory acddstsingleaudiofile dvddstdiscimage dvddstdiscdrive dvddstdatadirectory dvddstsingledatafile ;do
  [ -v ${button} ]  || eval $button="false"
  done
}

function choosedisctypeandsourcetype(){
# dt prefix
GDTYPE=$(zenity --list --text="Choose the disc type" --radiolist --column="Select" --column="Disk Type" ${dtdatacd} "Data CD" ${dtaudiocd} "Audio CD" ${dtdvd} "DVD" --height=250) || exit 1
case "$GDTYPE" in
    "Data CD")
# dcddst prefix
	DISCTYPEARG="--datacd"
	GSTYPE=$(zenity --list --text="Choose the data source type" --radiolist --column="Select" --column="Data Type" ${dcddstdiscimage} "Disc Image" ${dcddstdiscdrive} "Disc Drive" ${dcddstdatadirectory} "Data Directory" ${dcddstsingledatafile} "Single Data File" --height=280) || exit 1;;
    "Audio CD")
# acddst prefix
	DISCTYPEARG="--audiocd"
	GSTYPE=$(zenity --list --text="Choose the data source type" --radiolist --column="Select" --column="Data Type" ${acddsttoccuefile} "TOC/Cue File" ${acddstdiscdrive} "Disc Drive" ${acddstaudiodirectory} "Audio Directory" ${acddstsingleaudiofile} "Single Audio File" --height=280) || exit 1;;
    "DVD")
# dvddst prefix
	DISCTYPEARG="--dvd"
	GSTYPE=$(zenity --list --text="Choose the data source type" --radiolist --column="Select" --column="Data Type" ${dvddstdiscimage} "Disc Image" ${dvddstdiscdrive} "Disc Drive" ${dvddstdatadirectory} "Data Directory" ${dvddstsingledatafile} "Single Data File" --height=280) || exit 1;;
    *)
	exit 1;;
esac
}

function setdisctypeoptions(){
case "$GSTYPE" in
    "Disc Image")
	BURNTYPEARG="-i";;
    "Disc Drive")
	BURNTYPEARG="-c";;
    "Data Directory")
	BURNTYPEARG="-d";;
    "Single Data File")
	BURNTYPEARG="-d";;
    "TOC/Cue File")
	BURNTYPEARG="-t";;
    "Audio Directory")
	BURNTYPEARG="-a";;
    "Single Audio File")
	BURNTYPEARG="-s";;
    *)
	exit 1;;
esac
}

function setburnoptions(){
GOPTS=$(zenity --list --separator=':' --text="Choose burn options" --checklist --column="Select" --column="Option" false "Dummy Run" false "Retain Scratch Directory" false "Eject Burners Before First Burn" --height=280 --width=450) || exit 1
OPTARGS=""
if echo "$GOPTS" | grep "Dummy Run" &> /dev/null
    then
    OPTARGS="$OPTARGS --dummy"
fi
if echo "$GOPTS" | grep "Retain Scratch Directory" &> /dev/null
    then
    OPTARGS="$OPTARGS --keep"
fi
if echo "$GOPTS" | grep "Eject Burners Before First Burn" &> /dev/null
    then
    OPTARGS="$OPTARGS --eject"
fi
}

function selectdatasource(){

case "$GSTYPE" in
    "Disc Image" | "TOC/Cue File" | "Single Audio File" | "Single Data File")
	SOURCEARG=$(zenity --title="Please choose the data source (File)" --file-selection) || exit 1;;
    "Data Directory" | "Audio Directory")
	SOURCEARG=$(zenity --title="Please choose the data source (Directory)" --file-selection --directory) || exit 1;;
    "Disc Drive")
	SOURCEARG=$(zenity --title="Please choose the data source (Drive)" --file-selection --filename="/dev/") || exit 1;;
    *)
	exit 1;;
esac
}

function chooseburners(){
zenity --info --text="Please choose the burners to use in the next window.\nUse Ctrl-click to select multiple devices."
 
BURNERSARG=$(zenity --file-selection --multiple --separator=' ' --filename="/dev/") || exit 1
}

function createburncommand(){
COMMAND="multiburn $DISCTYPEARG $BURNTYPEARG \"$SOURCEARG\" $OPTARGS $BURNERSARG"

echo "Burn command:"
echo $COMMAND
echo
}

function runmulitburn(){
multiburn $DISCTYPEARG $BURNTYPEARG "$SOURCEARG" $OPTARGS $BURNERSARG  | zenity --text-info --title="INFO" --width=1000 --height=800
}
####### MAIN PROGRAMM #########

iszenityinstalled
setradiobuttondefaultselections
choosedisctypeandsourcetype
setdisctypeoptions
setburnoptions
selectdatasource
chooseburners
createburncommand
runmulitburn

